version: 2.1

orbs:
  python: circleci/python@0.2.1
  node: circleci/node@3.0.1
  docker: circleci/docker@1.4.0
  kubernetes: circleci/kubernetes@0.11.1
  doctl: digitalocean/cli@0.1.1

jobs:
  unit-test:
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          working_directory: backend
          name: Test
          command: ./manage.py test
      - store_test_results:
          path: backend/test-results
      - store_artifacts:
          path: backend/test-results
          destination: backend-tests
  build-frontend:
    executor: node/default
    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: latest
      - node/install-packages:
          app-dir: ./frontend
          override-ci-command: yarn install
      - run:
          working_directory: frontend
          name: Install
          command: yarn install
      - run:
          working_directory: frontend
          name: Build Assets
          command: npm run build
      - persist_to_workspace:
          root: ./backend/
          paths:
            - static/*
  push-image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: 7imbrook/site
      - docker/push:
          digest-path: /tmp/digest.txt
          image: 7imbrook/site
      - persist_to_workspace:
          root: /tmp/
          paths:
            - digest.txt
      - store_artifacts:
          path: /tmp/digest.txt
          destination: image_digest
  build-sidecar:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: 7imbrook/sidecar
          path: release
      - docker/push:
          image: 7imbrook/sidecar
  push-frontend:
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - attach_workspace:
          at: ./backend/
      - run:
          name: collectstatic
          working_directory: ./backend
          environment:
            DJANGO_SETTINGS_MODULE: backend.settings.prerelease
          command: ./manage.py collectstatic --no-input
  deploy-prerelease:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - kubernetes/install
      - doctl/install
      - doctl/initialize
      - run: |
          doctl kubernetes cluster kubeconfig save west-sfo2
      - attach_workspace:
          at: ./
      - run:
          name: Set Namespace
          command: kubectl config set-context --current --namespace ns-site
      - run:
          name: Patch Prerelease
          command: kubectl set image deployment/site-prerelease-deployment app=$(cat ./digest.txt)
      - run:
          name: Wait for Deployment
          command: kubectl rollout status deployment/site-prerelease-deployment
  deploy-production:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - kubernetes/install
      - doctl/install
      - doctl/initialize
      - run: |
          doctl kubernetes cluster kubeconfig save west-sfo2
      - attach_workspace:
          at: ./
      - run:
          name: Set Namespace
          command: kubectl config set-context --current --namespace ns-site
      - run:
          name: Patch Production
          command: kubectl set image deployment/site-deployment app=$(cat ./digest.txt)
      - run:
          name: Wait for Deployment
          command: kubectl rollout status deployment/site-deployment

workflows:
  frontend:
    jobs:
      - build-frontend
      - push-frontend:
          context: S3
          filters:
            branches:
              only:
                - master
          requires:
            - build-frontend
  backend:
    jobs:
      - build-sidecar:
          context: Docker Building
          filters:
            branches:
              only:
                - master
      - unit-test
      - push-image:
          context: Docker Building
          filters:
            branches:
              only:
                - master
          requires:
            - unit-test
      - deploy-prerelease:
          context: DigitalOcean
          filters:
            branches:
              only:
                - master
          requires:
            - push-image 
            - build-sidecar
      - deploy-production:
          context: DigitalOcean
          filters:
            branches:
              only:
                - master
          requires:
            - deploy-prerelease
