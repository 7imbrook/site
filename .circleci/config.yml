version: 2.1

orbs:
  python: circleci/python@0.2.1
  node: circleci/node@3.0.1
  docker: circleci/docker@1.4.0

jobs:
  unit-test:
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          working_directory: backend
          name: Test
          command: ./manage.py test
      - store_test_results:
          path: backend/test-results
      - store_artifacts:
          path: backend/test-results
          destination: backend-tests
  build-frontend:
    executor: node/default
    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: latest
      - node/install-packages:
          app-dir: ./frontend
          override-ci-command: yarn install
      - run:
          working_directory: frontend
          name: Install
          command: yarn install
      - run:
          working_directory: frontend
          name: Build Assets
          command: npm run build
      - persist_to_workspace:
          root: ./backend/
          paths:
            - static/*
  push-image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: 7imbrook/site
      - docker/push:
          digest-path: /tmp/digest.txt
          image: 7imbrook/site
      - persist_to_workspace:
          root: /tmp/
          paths:
            - digest.txt
  frontend-push:
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - attach_workspace:
          at: ./backend/
      - run:
          name: collectstatic
          working_directory: ./backend
          command: ./manage.py collectstatic --no-input

workflows:
  main:
    jobs:
      - unit-test
      - build-frontend
      - push-image:
          context: Docker Building
          filters:
            branches:
              only:
                - master
          requires:
            - unit-test
            - build-frontend
      - frontend-push:
          context: S3
          filters:
            branches:
              only:
                - master
          requires:
            - build-frontend

